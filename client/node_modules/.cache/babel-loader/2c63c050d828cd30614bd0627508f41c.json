{"ast":null,"code":"import _defineProperty from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lmccray/Documents/School/google_books_search/client/src/pages/SearchBooks.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../utils/API\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"],\n      inputValue: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      // Pull the name and value properties off of the event.target (the element which triggered the event)\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // Set the state for the appropriate input field\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.handleFormSubmit = function (event) {\n      event.preventDefault();\n      alert(\"Username: \".concat(_this.state.username, \"\\nPassword: \").concat(_this.state.password));\n\n      _this.setState({\n        username: \"\",\n        password: \"\"\n      });\n    };\n\n    _this.loadBooks = function (searchval) {\n      API.bookSearch(searchval).then(function (res) {\n        _this.setState({\n          books: []\n        });\n\n        for (var i = 0; i < res.data.items.length; i++) {\n          _this.state.books.push(res.data.items[i]);\n        }\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Google Book Search\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"Enter Book Name\",\n        name: \"inputValue\",\n        value: this.state.inputValue,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: this.loadBooks(this.state.inputValue),\n        variant: \"outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Search\")))))));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/lmccray/Documents/School/google_books_search/client/src/pages/SearchBooks.js"],"names":["React","Component","Col","Row","Container","Jumbotron","InputGroup","FormControl","Button","API","SearchBooks","state","books","inputValue","handleInputChange","event","target","name","value","setState","handleFormSubmit","preventDefault","alert","username","password","loadBooks","searchval","bookSearch","then","res","i","data","items","length","push","catch","err","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,oBAApC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,GAAP,MAAgB,cAAhB;;IAEMC,W;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqB,GAArB,EAA0B,GAA1B,CADD;AAENC,MAAAA,UAAU,EAAE;AAFN,K;;UAKRC,iB,GAAoB,UAAAC,KAAK,EAAI;AAC3B;AAD2B,0BAEHA,KAAK,CAACC,MAFH;AAAA,UAEnBC,IAFmB,iBAEnBA,IAFmB;AAAA,UAEbC,KAFa,iBAEbA,KAFa,EAG3B;;AACA,YAAKC,QAAL,qBACGF,IADH,EACUC,KADV;AAGD,K;;UAEDE,gB,GAAmB,UAAAL,KAAK,EAAI;AAC1BA,MAAAA,KAAK,CAACM,cAAN;AACAC,MAAAA,KAAK,qBAAc,MAAKX,KAAL,CAAWY,QAAzB,yBAAgD,MAAKZ,KAAL,CAAWa,QAA3D,EAAL;;AACA,YAAKL,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAAE,EAAZ;AAAgBC,QAAAA,QAAQ,EAAE;AAA1B,OAAd;AACD,K;;UAEDC,S,GAAY,UAAAC,SAAS,EAAI;AACvBjB,MAAAA,GAAG,CAACkB,UAAJ,CAAeD,SAAf,EACGE,IADH,CACQ,UAAAC,GAAG,EAAI;AACX,cAAKV,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAE;AAAT,SAAd;;AACA,aAAK,IAAIkB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeC,MAAnC,EAA2CH,CAAC,EAA5C,EAAgD;AAC9C,gBAAKnB,KAAL,CAAWC,KAAX,CAAiBsB,IAAjB,CAAsBL,GAAG,CAACE,IAAJ,CAASC,KAAT,CAAeF,CAAf,CAAtB;AACD;AACF,OANH,EAOGK,KAPH,CAOS,UAAAC,GAAG;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAAJ;AAAA,OAPZ;AAQD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,SAAD;AAAW,QAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,IAAI,EAAC,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAGE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AACE,QAAA,WAAW,EAAC,iBADd;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,KAAK,EAAE,KAAKzB,KAAL,CAAWE,UAHpB;AAIE,QAAA,QAAQ,EAAE,KAAKC,iBAJjB;AAKE,QAAA,IAAI,EAAC,MALP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE,oBAAC,UAAD,CAAY,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,KAAKW,SAAL,CAAe,KAAKd,KAAL,CAAWE,UAA1B,CAA/B;AAAsE,QAAA,OAAO,EAAC,mBAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CARF,CAHF,CADF,CADF,CADF,CADF;AAwBD;;;;EA1DuBZ,S;;AA6D1B,eAAeS,WAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport API from \"../utils/API\";\n\nclass SearchBooks extends Component {\n\n  state = {\n    books: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"],\n    inputValue: \"\"\n  };\n\n  handleInputChange = event => {\n    // Pull the name and value properties off of the event.target (the element which triggered the event)\n    const { name, value } = event.target;\n    // Set the state for the appropriate input field\n    this.setState({\n      [name]: value\n    });\n  };\n\n  handleFormSubmit = event => {\n    event.preventDefault();\n    alert(`Username: ${this.state.username}\\nPassword: ${this.state.password}`);\n    this.setState({ username: \"\", password: \"\" });\n  };\n\n  loadBooks = searchval => {\n    API.bookSearch(searchval)\n      .then(res => {\n        this.setState({ books: [] })\n        for (let i = 0; i < res.data.items.length; i++) {\n          this.state.books.push(res.data.items[i])\n        }\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid >\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron >\n              <div className=\"h1\" >Google Book Search</div>\n              <br></br>\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Enter Book Name\"\n                  name=\"inputValue\"\n                  value={this.state.inputValue}\n                  onChange={this.handleInputChange}\n                  type=\"text\"\n                />\n                <InputGroup.Append>\n                  <Button type=\"button\" onClick={this.loadBooks(this.state.inputValue)} variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Jumbotron>\n          </Col>\n        </Row>\n      </Container >\n    );\n  }\n}\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}