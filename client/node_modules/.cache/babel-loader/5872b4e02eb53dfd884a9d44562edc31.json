{"ast":null,"code":"import _defineProperty from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/lmccray/Documents/School/google_books_search/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/lmccray/Documents/School/google_books_search/client/src/pages/SearchBooks.js\";\nimport React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport Button from \"react-bootstrap/Button\";\nimport API from \"../utils/API\";\nimport Book from \"../components/Book\";\n\nvar SearchBooks =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchBooks, _Component);\n\n  function SearchBooks() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchBooks);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchBooks)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      books: [],\n      inputValue: \"\"\n    };\n\n    _this.handleInputChange = function (event) {\n      // Pull the name and value properties off of the event.target (the element which triggered the event)\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value; // Set the state for the appropriate input field\n\n      _this.setState(_defineProperty({}, name, value));\n    };\n\n    _this.loadBooks = function (searchval) {\n      API.bookSearch(_this.state.inputValue).then(function (res) {\n        var newarr = [];\n\n        _this.setState({\n          books: [],\n          inputValue: \"\"\n        });\n\n        console.log(\"Function was run\");\n        console.log(_this.state.books);\n\n        for (var i = 0; i < res.data.items.length; i++) {\n          newarr.push(res.data.items[i]);\n        }\n\n        _this.setState({\n          books: newarr\n        });\n      }).catch(function (err) {\n        return console.log(err);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchBooks, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Container, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Col, {\n        size: \"md-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(Jumbotron, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Google Book Search\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(InputGroup, {\n        className: \"mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(FormControl, {\n        placeholder: \"Enter Book Name\",\n        name: \"inputValue\",\n        value: this.state.inputValue,\n        onChange: this.handleInputChange,\n        type: \"text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }), React.createElement(InputGroup.Append, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"button\",\n        onClick: this.loadBooks,\n        variant: \"outline-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Search\")))))), this.state.books.map(function (book) {\n        return React.createElement(Book, {\n          booktitle: book.volumeInfo.title,\n          bookimage: book.volumeInfo.imageLinks.thumbnail,\n          authors: book.volumeInfo.authors,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return SearchBooks;\n}(Component);\n\nexport default SearchBooks;","map":{"version":3,"sources":["/Users/lmccray/Documents/School/google_books_search/client/src/pages/SearchBooks.js"],"names":["React","Component","Col","Row","Container","Jumbotron","InputGroup","FormControl","Button","API","Book","SearchBooks","state","books","inputValue","handleInputChange","event","target","name","value","setState","loadBooks","searchval","bookSearch","then","res","newarr","console","log","i","data","items","length","push","catch","err","map","book","volumeInfo","title","imageLinks","thumbnail","authors"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Col, Row, Container } from \"../components/Grid\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport InputGroup from \"react-bootstrap/InputGroup\"\nimport FormControl from \"react-bootstrap/FormControl\"\nimport Button from \"react-bootstrap/Button\"\nimport API from \"../utils/API\";\nimport Book from \"../components/Book\"\n\nclass SearchBooks extends Component {\n\n  state = {\n    books: [],\n    inputValue: \"\"\n  };\n\n  handleInputChange = event => {\n    // Pull the name and value properties off of the event.target (the element which triggered the event)\n    const { name, value } = event.target;\n    // Set the state for the appropriate input field\n    this.setState({\n      [name]: value\n    });\n  };\n\n  loadBooks = searchval => {\n    API.bookSearch(this.state.inputValue)\n      .then(res => {\n        let newarr = [];\n        this.setState({ books: [], inputValue: \"\" })\n        console.log(\"Function was run\")\n        console.log(this.state.books)\n        for (let i = 0; i < res.data.items.length; i++) {\n          newarr.push(res.data.items[i])\n        }\n        this.setState({books: newarr})\n      })\n      .catch(err => console.log(err));\n  };\n\n  render() {\n    return (\n      <Container fluid >\n        <Row>\n          <Col size=\"md-12\">\n            <Jumbotron >\n              <div className=\"h1\" >Google Book Search</div>\n              <br></br>\n              <InputGroup className=\"mb-3\">\n                <FormControl\n                  placeholder=\"Enter Book Name\"\n                  name=\"inputValue\"\n                  value={this.state.inputValue}\n                  onChange={this.handleInputChange}\n                  type=\"text\"\n                />\n                <InputGroup.Append>\n                  <Button type=\"button\" onClick={this.loadBooks} variant=\"outline-secondary\">Search</Button>\n                </InputGroup.Append>\n              </InputGroup>\n            </Jumbotron>\n          </Col>\n        </Row>\n        {this.state.books.map(book => (\n          <Book \n          booktitle={book.volumeInfo.title}\n          bookimage={book.volumeInfo.imageLinks.thumbnail}\n          authors={book.volumeInfo.authors}\n           />\n        ))}\n      </Container >\n    );\n  }\n}\n\nexport default SearchBooks;\n"]},"metadata":{},"sourceType":"module"}